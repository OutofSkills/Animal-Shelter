@page "/productoverview"
@using AnimalShelter.Shared
@using AnimalShelter.Client.Services
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@if (!ProductList.Any())
{
    <div class="spinner-border" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Vat %</th>
                <th>Net price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <!--Display the list of animals-->
            @foreach (var product in ProductList)
            {
                <ProductListRow Product="product" OnProductBought="ProductBought" />
                <!--Using the component ProductListRow-->
            }
        </tbody>
    </table>
    <button class="btn-primary" @onclick="AddProduct">Add Product</button>
}


@code {
    private List<Product> ProductList { get; set; } = new List<Product>();
    [Inject]
    private IJSRuntime JSRuntime { set; get; }

    [Inject]
    private IProductService ProductService { get; set; }

    [Inject]
    private NavigationManager NavManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ProductList = await ProductService.GetAllProducts();
    }

    private async Task ProductBought(Product productToBuy)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm",
            $"Are you sure you want to buy {productToBuy.Name}?");

        if (confirmed)
        {
            await ProductService.DeleteProduct(productToBuy);
            ProductList = await ProductService.GetAllProducts();
        }
    }

    private void AddProduct()
    {
        NavManager.NavigateTo("/productdetails");
    }
}
